{"version":3,"sources":["components/instructions/label.tsx","components/instructions/item.tsx","utils/board.ts","constants/constants.ts","components/instructions.tsx","components/pagination/page.tsx","components/pagination.tsx","components/modal.tsx","components/board/cell.tsx","components/board/row.tsx","components/board.tsx","constants/actions.ts","actions/game-actions.ts","utils/presets.ts","components/game/presets.jsx","components/draw.tsx","components/game/wrapper.tsx","components/game/footer.jsx","components/game/clear.jsx","components/game.tsx","utils/hooks.ts","components/size.tsx","reducers/game-reducer.ts","containers/game.tsx","index.tsx","records/game-records.ts"],"names":["Label","active","completed","children","className","Item","icon","undefined","hasCells","grid","some","row","cell","Instructions","store","init","length","draw","simulation","tick","Page","page","onChange","type","onClick","Pagination","total","pages","useMemo","Array","fill","map","_","index","num","style","backgroundColor","display","Modal","open","title","confirm","onConfirm","onClose","tabIndex","role","BoardCell","content","BoardRow","Board","UPDATE_GRID_SIZE","NEXT_TICK","CLEAR_GRID","RESET_GAME","LOAD_PRESET","DRAW_CELL","nextTick","dispatch","actions","Presets","useState","setOpen","setPage","presets","preset","useDispatch","loadPreset","coords","evt","rect","size","clientX","clientY","max","touches","pageX","pageY","x","Math","floor","left","width","y","top","height","maxX","min","maxY","drawing","lastX","lastY","Draw","state","setState","onMove","useCallback","onStart","currentTarget","getBoundingClientRect","onEnd","useEffect","document","addEventListener","removeEventListener","move","onMouseDown","onMouseMove","onTouchStart","onTouchMove","onTouchEnd","Wrapper","running","drawCell","Footer","empty","onToggle","disabled","resetGame","Clear","clearGrid","Game","prev","setRunning","timer","stable","every","r","c","areEqual","setInterval","clearInterval","useSimulation","options","label","value","Size","setSize","updateGridSize","createGrid","i","push","immer","action","Y","neighbours","reduce","iterate","maxWidth","createContainer","Component","gameReducer","node","getElementById","immerable","app","StrictMode","initialState","ReactDOM","render"],"mappings":"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","file":"static/js/main.90a9c6fa.chunk.js","sourcesContent":["import type { FunctionComponent } from 'react';\n\n// --------------------------------------------------------------------\n\ninterface Props {\n  completed: boolean;\n  active: boolean;\n}\n\n// --------------------------------------------------------------------\n\nconst Label: FunctionComponent<Props> = ({ active, completed, children }) => {\n  if (completed === true) {\n    return (\n      <span>{children}</span>\n    );\n  }\n\n  if (active === true) {\n    return (\n      <strong>{children}</strong>\n    );\n  }\n\n  return (\n    <span className=\"text-muted\">{children}</span>\n  );\n};\n\nexport default Label;\n","import type { FunctionComponent } from 'react';\nimport Label from './label';\n\n// --------------------------------------------------------------------\n\ninterface Props {\n  completed: boolean;\n  active: boolean;\n}\n\n// --------------------------------------------------------------------\n\nconst Item: FunctionComponent<Props> = ({ active, completed, children }) => {\n  const icon = completed ? 'h5 text-secondary bi-check' : undefined;\n\n  return (\n    <li className=\"mb-1\">\n      <Label active={active} completed={completed}>\n        {children}\n      </Label>\n      <i className={icon} />\n    </li>\n  );\n};\n\nexport default Item;\n","import { DEAD, ALIVE } from '../constants/constants';\n\n// --------------------------------------------------------------------\n\nexport type Cell = 0 | 1;\nexport type Row = Array<Cell>;\nexport type Grid = Array<Row>;\n\n// --------------------------------------------------------------------\n\nexport function iterate(grid: Grid): Grid {\n  const Y = grid.length - 1;\n\n  return grid.map((row: Row, y: number): Row => {\n    return row.map((cell: Cell, x: number): Cell => {\n      /* eslint-disable computed-property-spacing, no-multi-spaces, indent */\n      const values = [\n        y > 0 ? grid[y - 1][x - 1] : undefined, // top left\n        y > 0 ? grid[y - 1][x    ] : undefined, // top\n        y > 0 ? grid[y - 1][x + 1] : undefined, // top right\n                grid[y    ][x - 1],             // left\n                grid[y    ][x + 1],             // right\n        y < Y ? grid[y + 1][x - 1] : undefined, // bottom left\n        y < Y ? grid[y + 1][x    ] : undefined, // bottom\n        y < Y ? grid[y + 1][x + 1] : undefined  // bottom right\n      ];\n      /* eslint-enable */\n\n      // contiamo quante celle vive abbiamo vicino a quella corrente\n\n      const neighbours = values.reduce<number>((total, value) => {\n        return value === ALIVE ? total + 1 : total;\n      }, 0);\n\n      // regole:\n      // 1) una cellula continua a vivere se intorno ad essa ci sono\n      //    o 2 o 3 cellule vive, altrimenti muore\n      // 3) se una cellula morta ha vicino 3 cellule vive, allora\n      //    torna in vita\n\n      if (cell === ALIVE) {\n        return neighbours === 2 || neighbours === 3 ? ALIVE : DEAD;\n      }\n\n      return neighbours === 3 ? ALIVE : DEAD;\n    });\n  });\n}\n\nexport function hasCells(grid: Grid): boolean {\n  return grid.some((row) => row.some((cell) => cell === ALIVE));\n}\n\nexport function areEqual(prev: Grid, grid: Grid): boolean {\n  return grid.every((row, r) => row.every((cell, c) => cell === prev[r][c]));\n}\n","export const NEXT_STEP  = 'bi bi-chevron-double-right m-1';\nexport const ICON_ALIVE = 'bi bi-circle-fill';\nexport const ICON_DEAD  = 'bi bi-circle';\n\nexport const ALIVE = 1;\nexport const DEAD  = 0;\n","import Item from './instructions/item';\n\nimport { hasCells } from '../utils/board';\n\nimport type { State } from '../records/game-records';\nimport type { FunctionComponent } from 'react';\n\n// --------------------------------------------------------------------\n\ninterface Props {\n  store: State;\n}\n\n// --------------------------------------------------------------------\n\nconst Instructions: FunctionComponent<Props> = ({ store }) => {\n  const init       = store.grid.length === 0;\n  const grid       = store.grid.length !== 0;\n  const draw       = hasCells(store.grid);\n  const simulation = draw && store.tick !== 0;\n\n  return (\n    <ul className=\"mt-3 mt-md-5 mb-3\">\n      <Item active={init} completed={grid}>\n        Select the grid size\n      </Item>\n      <Item active={grid} completed={draw}>\n        Draw on the grid\n      </Item>\n      <Item active={draw} completed={simulation}>\n        Start the simulation\n      </Item>\n    </ul>\n  );\n};\n\nexport default Instructions;\n","import { FunctionComponent } from 'react';\n\n// --------------------------------------------------------------------\n\ninterface Props {\n  page: number;\n  active: number;\n  onChange: (page: number) => void;\n}\n\n// --------------------------------------------------------------------\n\nconst Page: FunctionComponent<Props> = ({ page, active, onChange }) => {\n  const className = page === active ? 'page-item active' : 'page-item';\n  const onClick   = () => {\n    onChange(page);\n  };\n\n  return (\n    <li className={className}>\n      <button type=\"button\" className=\"page-link\" data-page={page}\n        onClick={onClick}>\n        {page + 1}\n      </button>\n    </li>\n  );\n};\n\nexport default Page;\n","import { FunctionComponent, useMemo } from 'react';\nimport Page from './pagination/page';\n\n// --------------------------------------------------------------------\n\ninterface Props {\n  page: number;\n  total: number;\n  onChange: (page: number) => void;\n}\n\n// --------------------------------------------------------------------\n\nconst Pagination: FunctionComponent<Props> = ({ page, total, onChange }) => {\n  const pages = useMemo(() => {\n    return new Array(total).fill(0).map((_, index) => index);\n  }, [ total ]);\n\n  return (\n    <nav className=\"text-center mt-3\">\n      <ul className=\"pagination justify-content-center mb-0\">\n        {pages.map((num) => (\n          <Page key={num} page={num} active={page} onChange={onChange} />\n        ))}\n      </ul>\n    </nav>\n  );\n};\n\nexport default Pagination;\n","import type { FunctionComponent } from 'react';\n\n// --------------------------------------------------------------------\n\nconst style = {\n  backgroundColor: 'rgba(0,0,0,.2)',\n  display:         'initial'\n};\n\ninterface Props {\n  open: boolean;\n  title: string;\n  confirm: string;\n  onClose: () => void;\n  onConfirm: () => void;\n}\n\n// --------------------------------------------------------------------\n\nconst Modal: FunctionComponent<Props> = ({\n  open, title, confirm, children, onConfirm, onClose\n}) => {\n  if (open === false) {\n    return null;\n  }\n\n  return (\n    <div className=\"modal show\" style={style} tabIndex={-1}\n      aria-modal=\"true\" role=\"dialog\">\n      <div className=\"modal-dialog modal-dialog-centered modal-dialog-scrollable\">\n        <div className=\"modal-content\">\n          <div className=\"modal-header\">\n            <h5 className=\"modal-title\">{title}</h5>\n            <button type=\"button\" className=\"btn-close\"aria-label=\"Close\"\n              onClick={onClose} />\n          </div>\n          <div className=\"modal-body\">\n            {children}\n          </div>\n          <div className=\"modal-footer\">\n            <button type=\"button\" className=\"btn btn-secondary-outline\"\n              onClick={onClose}>\n              Close\n            </button>\n            <button type=\"button\" className=\"btn btn-secondary\"\n              onClick={onConfirm}>\n              {confirm}\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n","import type { FunctionComponent } from 'react';\nimport type { Cell } from '../../utils/board';\n\nimport { ALIVE, ICON_ALIVE, ICON_DEAD } from '../../constants/constants';\n\n// --------------------------------------------------------------------\n\ninterface Props {\n  content: Cell;\n}\n\n// --------------------------------------------------------------------\n\nconst BoardCell: FunctionComponent<Props> = ({ content }) => {\n  const icon = content === ALIVE ? ICON_ALIVE : ICON_DEAD;\n\n  return (\n    <td>\n      <i className={icon} />\n    </td>\n  );\n};\n\nexport default BoardCell;\n","import type { Row, Cell } from '../../utils/board';\nimport type { FunctionComponent } from 'react';\nimport BoardCell from './cell';\n\n// --------------------------------------------------------------------\n\ninterface Props {\n  content: Row;\n}\n\n// --------------------------------------------------------------------\n\nconst BoardRow: FunctionComponent<Props> = ({ content }) => {\n  return (\n    <tr>\n      {content.map((cell: Cell, index: number) => (\n        <BoardCell key={index} content={cell} />\n      ))}\n    </tr>\n  );\n};\n\nexport default BoardRow;\n","import type { Grid, Row } from '../utils/board';\nimport type { FunctionComponent } from 'react';\nimport BoardRow from './board/row';\n\n// --------------------------------------------------------------------\n\ninterface Props {\n  content: Grid;\n}\n\n// --------------------------------------------------------------------\n\nconst Board: FunctionComponent<Props> = ({ content }) => {\n  return (\n    <table className=\"mx-auto\">\n      <tbody>\n        {content.map((row: Row, index: number) => (\n          <BoardRow key={index} content={row} />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nexport default Board;\n","export const UPDATE_GRID_SIZE = 'UPDATE_GRID_SIZE';\nexport const NEXT_TICK        = 'NEXT_TICK';\nexport const CLEAR_GRID       = 'CLEAR_GRID';\nexport const RESET_GAME       = 'RESET_GAME';\nexport const LOAD_PRESET      = 'LOAD_PRESET';\nexport const DRAW_CELL        = 'DRAW_CELL';\n","import * as actions from '../constants/actions';\nimport type { Dispatch, Action } from 'monarc';\nimport type { Grid } from '../utils/board';\n\n// --------------------------------------------------------------------\n\nexport function updateGridSize(dispatch: Dispatch<Action>, size: number): void {\n  dispatch({ type: actions.UPDATE_GRID_SIZE, size });\n}\n\nexport function nextTick(dispatch: Dispatch<Action>): void {\n  dispatch({ type: actions.NEXT_TICK });\n}\n\nexport function clearGrid(dispatch: Dispatch<Action>): void {\n  dispatch({ type: actions.CLEAR_GRID });\n}\n\nexport function resetGame(dispatch: Dispatch<Action>): void {\n  dispatch({ type: actions.RESET_GAME });\n}\n\nexport function loadPreset(dispatch: Dispatch<Action>, preset: Grid): void {\n  dispatch({ type: actions.LOAD_PRESET, preset });\n}\n\nexport function drawCell(dispatch: Dispatch<Action>, x: number, y: number): void {\n  dispatch({ type: actions.DRAW_CELL, x, y });\n}\n","import { DEAD, ALIVE } from '../constants/constants';\n\nexport default [\n  // doppio blinker\n  [\n    [ DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD ],\n    [ DEAD, DEAD, ALIVE, DEAD, DEAD, DEAD, DEAD, DEAD ],\n    [ DEAD, DEAD, ALIVE, DEAD, DEAD, DEAD, DEAD, DEAD ],\n    [ DEAD, DEAD, ALIVE, DEAD, DEAD, DEAD, DEAD, DEAD ],\n    [ DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, ALIVE, DEAD ],\n    [ DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, ALIVE, DEAD ],\n    [ DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, ALIVE, DEAD ],\n    [ DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD ]\n  ],\n\n  // toad\n  [\n    [ DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD ],\n    [ DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD ],\n    [ DEAD, DEAD, DEAD, ALIVE, ALIVE, ALIVE, DEAD, DEAD ],\n    [ DEAD, DEAD, ALIVE, ALIVE, ALIVE, DEAD, DEAD, DEAD ],\n    [ DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD ],\n    [ DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD ],\n    [ DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD ],\n    [ DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD ]\n  ],\n\n  // glider\n  [\n    [ DEAD, ALIVE, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD ],\n    [ DEAD, DEAD, ALIVE, DEAD, DEAD, DEAD, DEAD, DEAD ],\n    [ ALIVE, ALIVE, ALIVE, DEAD, DEAD, DEAD, DEAD, DEAD ],\n    [ DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD ],\n    [ DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD ],\n    [ DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD ],\n    [ DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD ],\n    [ DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD ]\n  ],\n\n  // F-pentomino\n  [\n    [ DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD ],\n    [ DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD ],\n    [ DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD ],\n    [ DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD ],\n    [ DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD ],\n    [ DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, ALIVE, ALIVE, DEAD, DEAD, DEAD ],\n    [ DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, ALIVE, ALIVE, DEAD, DEAD, DEAD, DEAD ],\n    [ DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, ALIVE, DEAD, DEAD, DEAD, DEAD ],\n    [ DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD ],\n    [ DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD ],\n    [ DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD ],\n    [ DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD, DEAD ]\n  ]\n];\n","import { FunctionComponent, Fragment, useState } from 'react';\nimport Pagination from '../pagination';\nimport Modal from '../modal';\nimport Board from '../board';\n\nimport { loadPreset } from '../../actions/game-actions';\nimport presets from '../../utils/presets';\nimport { useDispatch } from 'monarc';\n\n// --------------------------------------------------------------------\n\nconst Presets: FunctionComponent = () => {\n  const [ open, setOpen ] = useState(false);\n  const [ page, setPage ] = useState(0);\n\n  const onClose   = () => setOpen(false);\n  const onOpen    = () => setOpen(true);\n  const total     = presets.length;\n  const preset    = presets[page];\n  const dispatch  = useDispatch();\n  const onConfirm = () => {\n    loadPreset(dispatch, preset);\n    setOpen(false);\n  };\n\n  return (\n    <Fragment>\n      <button className=\"btn btn-link d-block\" onClick={onOpen}>\n        Import preset\n      </button>\n      <Modal open={open} title=\"Import a preset\" confirm=\"import\"\n        onClose={onClose} onConfirm={onConfirm}>\n        <Board content={preset} />\n        <Pagination page={page} total={total} onChange={setPage} />\n      </Modal>\n    </Fragment>\n  );\n};\n\nexport default Presets;\n","import {\n  FunctionComponent, MouseEvent, TouchEvent,\n  useState, useEffect, useCallback\n} from 'react';\n\n// --------------------------------------------------------------------\n\ntype Evt = MouseEvent<HTMLElement> | TouchEvent<HTMLElement>;\n\ninterface Props {\n  onChange: (x: number, y: number) => void;\n  className?: string;\n  size: number;\n}\n\ninterface Rect {\n  top: number;\n  left: number;\n  width: number;\n  height:number;\n}\n\nfunction coords(evt: Evt, rect: Rect, size: number): [ number, number ] {\n  const max = size - 1;\n  let clientX;\n  let clientY;\n\n  if ('touches' in evt) {\n    clientX = evt.touches[0].pageX;\n    clientY = evt.touches[0].pageY;\n  } else {\n    clientX = evt.clientX;\n    clientY = evt.clientY;\n  }\n\n  const x = Math.floor((clientX - rect.left) * size / rect.width);\n  const y = Math.floor((clientY - rect.top) * size / rect.height);\n\n  // su mobile l'evento move ci segue anche al di fuori\n  // della griglia (al contrario che su desktop), quindi\n  // dobbiamo stare attenti a non \"sbordare\"\n\n  const maxX = Math.min(x, max);\n  const maxY = Math.min(y, max);\n\n  return [\n    Math.max(maxX, 0),\n    Math.max(maxY, 0)\n  ];\n}\n\nconst init = {\n  drawing: false,\n  left:    0,\n  top:     0,\n  width:   0,\n  height:  0,\n  lastX:   0,\n  lastY:   0\n};\n\n// --------------------------------------------------------------------\n\nconst Draw: FunctionComponent<Props> = ({ className, size, children, onChange }) => {\n  const [ state, setState ] = useState(init);\n\n  const onMove = useCallback((evt: Evt) => {\n    const [ x, y ] = coords(evt, state, size);\n\n    if (x !== state.lastX || y !== state.lastY) {\n      onChange(x, y);\n    }\n\n    setState({ ...state, lastX: x, lastY: y });\n  }, [ state, size, onChange ]);\n\n  const onStart = useCallback((evt: Evt) => {\n    if ('touches' in evt && evt.touches.length > 1) {\n      return;\n    }\n\n    const rect = evt.currentTarget.getBoundingClientRect();\n    let x = 0;\n    let y = 0;\n\n    if (evt.type === 'mousedown') {\n      [ x, y ] = coords(evt, rect, size);\n\n      onChange(x, y);\n    }\n\n    setState({\n      height:  rect.height,\n      width:   rect.width,\n      left:    rect.left,\n      top:     rect.top,\n      drawing: true,\n      lastX:   x,\n      lastY:   y\n    });\n  }, [ size, onChange ]);\n\n  const onEnd = useCallback(() => {\n    setState(init);\n  }, []);\n\n  // registriamo il mouseup su document, perché se rilasciamo\n  // il mouse al di fuori della griglia rimarremo \"bloccati\"\n  // in modalità disegno\n\n  useEffect(() => {\n    document.addEventListener('mouseup', onEnd);\n\n    return () => {\n      document.removeEventListener('mouseup', onEnd);\n    };\n  }, [ onEnd ]);\n\n  const move = state.drawing ? onMove : undefined;\n\n  return (\n    <div className={className} onMouseDown={onStart} onMouseMove={move}\n      onTouchStart={onStart} onTouchMove={onMove}\n      onTouchEnd={onEnd}>\n      {children}\n    </div>\n  );\n};\n\nexport default Draw;\n","import { FunctionComponent } from 'react';\nimport Board from '../board';\nimport Draw from '../draw';\n\nimport { drawCell } from '../../actions/game-actions';\nimport type { Grid } from '../../utils/board';\nimport { useDispatch } from 'monarc';\n\n// --------------------------------------------------------------------\n\ninterface Props {\n  running: boolean;\n  grid: Grid;\n}\n\n// --------------------------------------------------------------------\n\nconst Wrapper: FunctionComponent<Props> = ({ running, grid }) => {\n  const dispatch = useDispatch();\n  const size     = grid.length;\n\n  const onChange = (x: number, y: number) => {\n    drawCell(dispatch, x, y);\n  };\n\n  if (running === false) {\n    return (\n      <Draw className=\"d-inline-block mx-auto\"\n        size={size} onChange={onChange}>\n        <Board content={grid} />\n      </Draw>\n    );\n  }\n\n  return (\n    <div className=\"d-inline-block mx-auto\">\n      <Board content={grid} />\n    </div>\n  );\n};\n\nexport default Wrapper;\n","import { FunctionComponent, Fragment } from 'react';\n\nimport { resetGame, nextTick } from '../../actions/game-actions';\nimport { NEXT_STEP } from '../../constants/constants';\nimport { useDispatch } from 'monarc';\n\n// --------------------------------------------------------------------\n\ninterface Props {\n  empty: boolean;\n  running: boolean;\n  onToggle: () => void;\n}\n\n// --------------------------------------------------------------------\n\nconst Footer: FunctionComponent<Props> = ({ empty, running, onToggle }) => {\n  const dispatch = useDispatch();\n  const onReset = () => {\n    resetGame(dispatch);\n  };\n  const onNext = () => {\n    nextTick(dispatch);\n  };\n\n  if (running === true) {\n    return (\n      <button type=\"button\" className=\"btn btn-secondary\"\n        disabled={empty} onClick={onToggle}>\n        Stop game\n      </button>\n    );\n  }\n\n  return (\n    <Fragment>\n      <button type=\"button\" className=\"btn btn-secondary\"\n        disabled={empty} onClick={onToggle}>\n        Start game\n      </button>\n      <button type=\"button\" className=\"btn btn-secondary-outline ms-3\"\n        onClick={onNext}>\n        <span className=\"d-none d-md-inline\">\n          Next\n        </span>\n        <i className={NEXT_STEP} />\n      </button>\n      <button type=\"button\" className=\"btn btn-secondary-outline ms-3\"\n        onClick={onReset}>\n        Reset\n      </button>\n    </Fragment>\n  );\n};\n\nexport default Footer;\n","import { FunctionComponent } from 'react';\n\nimport { clearGrid } from '../../actions/game-actions';\nimport { useDispatch } from 'monarc';\n\n// --------------------------------------------------------------------\n\nconst Clear: FunctionComponent = () => {\n  const dispatch = useDispatch();\n  const onClear  = () => {\n    clearGrid(dispatch);\n  };\n\n  return (\n    <button type=\"button\" className=\"btn btn-link d-block\"\n      onClick={onClear}>\n      Clear grid\n    </button>\n  );\n};\n\nexport default Clear;\n","import { FunctionComponent, Fragment } from 'react';\nimport Presets from './game/presets';\nimport Wrapper from './game/wrapper';\nimport Footer from './game/footer';\nimport Clear from './game/clear';\n\nimport type { State } from '../records/game-records';\nimport { useSimulation } from '../utils/hooks';\nimport { hasCells } from '../utils/board';\n\n// --------------------------------------------------------------------\n\ninterface Props {\n  store: State;\n}\n\n// --------------------------------------------------------------------\n\nconst Game: FunctionComponent<Props> = ({ store }) => {\n  const { prev, grid, tick } = store;\n\n  const empty = hasCells(grid) === false;\n\n  const [ running, onToggle ] = useSimulation(prev, grid);\n\n  return (\n    <Fragment>\n      <div className=\"text-center\">\n        <p>\n          Tick nr. {tick}\n        </p>\n        <Wrapper running={running} grid={grid} />\n      </div>\n\n      <Presets />\n      <Clear />\n      <hr />\n\n      <Footer empty={empty} running={running} onToggle={onToggle} />\n    </Fragment>\n  );\n};\n\nexport default Game;\n","import { nextTick } from '../actions/game-actions';\nimport { Grid, hasCells, areEqual } from './board';\nimport { useEffect, useState } from 'react';\nimport { useDispatch } from 'monarc';\n\n// --------------------------------------------------------------------\n\ntype OnToggle = () => void;\n\n// --------------------------------------------------------------------\n\nexport function useSimulation(prev: Grid, grid: Grid): [ boolean, OnToggle ] {\n  const [ running, setRunning ] = useState(false);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const stable    = running && prev.length !== 0 ? areEqual(prev, grid) : false;\n    const populated = hasCells(grid);\n\n    if (populated === false || stable === true) {\n      setRunning(false);\n      return undefined;\n    }\n\n    // XXX un'animazione troppo veloce rende l'esperienza\n    // abbastanza confusa. introduciamo quindi un ritardo\n    // artificiale (con un sistema abbastanza crudo, ma\n    // per il momento ci accontentiamo)\n\n    let timer: ReturnType<typeof setTimeout>;\n\n    if (running) {\n      timer = setInterval(() => nextTick(dispatch), 250);\n\n      return () => {\n        clearInterval(timer);\n      };\n    }\n\n    return undefined;\n  }, [ prev, grid, running, dispatch ]);\n\n  if (running === true) {\n    return [ true, () => setRunning(false) ];\n  }\n\n  return [ false, () => setRunning(true) ];\n}\n","import Select, { RSSValue, RSSOption } from 'react-smart-select';\nimport { FunctionComponent, Fragment, useState } from 'react';\nimport Presets from './game/presets';\n\nimport { updateGridSize } from '../actions/game-actions';\nimport { useDispatch } from 'monarc';\n\n// --------------------------------------------------------------------\n\nconst options = [\n  { label: '8 × 8', value: 8 },\n  { label: '12 × 12', value: 12 },\n  { label: '16 × 16', value: 16 }\n];\n\n// --------------------------------------------------------------------\n\nconst Size: FunctionComponent = () => {\n  const [ size, setSize ] = useState<RSSValue>();\n\n  const disabled = size === undefined;\n  const dispatch = useDispatch();\n  const onSubmit = () => {\n    const selected = size as RSSOption;\n\n    if (selected) {\n      updateGridSize(dispatch, selected.value);\n    }\n  };\n\n  return (\n    <Fragment>\n      <div className=\"text-center\">\n        <Select value={size} options={options} onChange={setSize} />\n      </div>\n\n      <Presets />\n      <hr />\n\n      <button type=\"button\" className=\"btn btn-secondary\"\n        disabled={disabled} onClick={onSubmit}>\n        Create grid\n      </button>\n    </Fragment>\n  );\n};\n\nexport default Size;\n","import { DEAD, ALIVE } from '../constants/constants';\nimport { State } from '../records/game-records';\nimport * as actions from '../constants/actions';\nimport { Grid, iterate } from '../utils/board';\nimport type { Action } from 'monarc';\nimport immer from 'immer';\n\n// --------------------------------------------------------------------\n\nfunction createGrid(state: State, size: number): void {\n  const grid: Grid = [];\n\n  for (let i = 0; i < size; i++) {\n    const empty = new Array(size);\n    const row   = empty.fill(DEAD);\n\n    grid.push(row);\n  }\n\n  state.grid = grid;\n  state.prev = [];\n}\n\nfunction nextTick(state: State): void {\n  state.tick += 1;\n  state.prev  = state.grid;\n  state.grid  = iterate(state.grid);\n}\n\nfunction resetGame(state: State): void {\n  state.grid = [];\n  state.prev = [];\n  state.tick = 0;\n}\n\nfunction loadPreset(state: State, action: Action): void {\n  state.grid = action.preset;\n  state.prev = [];\n  state.tick = 0;\n}\n\nfunction drawCell(state: State, action: Action): void {\n  const { x, y } = action;\n  const current  = state.grid;\n  const cell     = current[y][x];\n\n  state.grid[y][x] = cell === DEAD ? ALIVE : DEAD;\n  state.tick       = 0;\n}\n\n// --------------------------------------------------------------------\n\nexport default immer((state: State, action: Action): void => {\n  switch (action.type) {\n    case actions.UPDATE_GRID_SIZE:\n      createGrid(state, action.size);\n      break;\n\n    case actions.CLEAR_GRID:\n      createGrid(state, state.grid.length);\n      break;\n\n    case actions.NEXT_TICK:\n      nextTick(state);\n      break;\n\n    case actions.RESET_GAME:\n      resetGame(state);\n      break;\n\n    case actions.LOAD_PRESET:\n      loadPreset(state, action);\n      break;\n\n    case actions.DRAW_CELL:\n      drawCell(state, action);\n      break;\n\n    default:\n      break;\n  }\n});\n","import Instructions from '../components/instructions';\nimport Game from '../components/game';\nimport Size from '../components/size';\n\nimport gameReducer from '../reducers/game-reducer';\nimport { createContainer } from 'monarc';\n\nimport type { State } from '../records/game-records';\nimport type { FunctionComponent } from 'react';\n\n// --------------------------------------------------------------------\n\nconst style = {\n  maxWidth: '550px'\n};\n\ninterface Props {\n  store: State;\n}\n\n// --------------------------------------------------------------------\n\nconst GameContainer: FunctionComponent<Props> = ({ store }) => {\n  const Component = store.grid.length === 0 ? Size : Game;\n\n  return (\n    <div className=\"container shadow-2 mx-auto p-3 mt-3\" style={style}>\n      <div>\n        <h1 className=\"text-center\">Conway&apos;s Game of Life</h1>\n        <Instructions store={store} />\n        <Component store={store} />\n      </div>\n    </div>\n  );\n};\n\nexport default createContainer(GameContainer, gameReducer);\n","import 'mdb-react-ui-kit/dist/css/mdb.min.css';\nimport 'bootstrap-icons/font/bootstrap-icons.css';\n\nimport { State } from './records/game-records';\nimport Game from './containers/game';\nimport ReactDOM from 'react-dom';\nimport React from 'react';\n\n// --------------------------------------------------------------------\n\nconst node  = document.getElementById('root');\nconst state = new State();\nconst app   = (\n  <React.StrictMode>\n    <Game initialState={state} />\n  </React.StrictMode>\n);\n\nReactDOM.render(app, node);\n","import type { Grid } from '../utils/board';\nimport { immerable } from 'immer';\n\n// --------------------------------------------------------------------\n\nexport class State {\n  [immerable] = true;\n\n  prev: Grid = [];\n\n  grid: Grid = [];\n\n  tick = 0;\n}\n"],"sourceRoot":""}